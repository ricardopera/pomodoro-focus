name: Build and Release

permissions:
  contents: write
  issues: write
  pull-requests: write

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      version_number: ${{ steps.get_version.outputs.version_number }}
    steps:
      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          # Remove 'v' prefix for version number (v1.0.0 -> 1.0.0)
          VERSION_NUMBER="${VERSION#v}"
          echo "version_number=$VERSION_NUMBER" >> $GITHUB_OUTPUT

  build-windows:
    needs: get-version
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Clear electron-builder cache
        run: |
          Remove-Item "$env:LOCALAPPDATA\electron-builder\Cache" -Recurse -Force -ErrorAction SilentlyContinue
        shell: powershell

      - name: Build application (directory only)
        run: npm run pack
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GUI wrapper for console-free execution
        run: |
          # Create VBScript launcher
          $vbsContent = @"
          Set WshShell = CreateObject("WScript.Shell")
          Set fso = CreateObject("Scripting.FileSystemObject")
          scriptDir = fso.GetParentFolderName(WScript.ScriptFullName)
          exePath = scriptDir & "\Pomodoro Focus.exe"
          WshShell.Run Chr(34) & exePath & Chr(34), 0, False
          Set WshShell = Nothing
          Set fso = Nothing
          "@
          $vbsContent | Out-File -FilePath "release\win-unpacked\Pomodoro Focus (No Console).vbs" -Encoding ASCII
          
          # Build C# GUI launcher
          cd scripts\launcher-gui
          dotnet publish -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true
          Copy-Item "bin\Release\net6.0-windows\win-x64\publish\Pomodoro Focus Launcher.exe" "..\..\release\win-unpacked\Pomodoro Focus (GUI).exe"
          cd ..\..
          
          # Try to build installer if possible
          npx electron-builder --win --publish=never 2>$null || echo "Installer build failed, using directory build"
        shell: powershell
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List release files
        run: |
          dir release
          echo "--- win-unpacked contents ---"
          dir "release\win-unpacked"
        shell: powershell

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: |
            release/*.exe
            release/win-unpacked/
          retention-days: 1

      - name: Upload Windows portable (no console)
        uses: actions/upload-artifact@v4
        with:
          name: windows-portable
          path: release/win-unpacked/
          retention-days: 1

  build-linux:
    needs: get-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Linux executables
        run: npm run dist:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List release files
        run: ls -lh release/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: |
            release/*.AppImage
            release/*.deb
          retention-days: 1

  build-macos:
    needs: get-version
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build macOS executables
        run: npm run dist:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List release files
        run: ls -lh release/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: |
            release/*.dmg
            release/*-mac.zip
          retention-days: 1

  create-release:
    needs: [get-version, build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-artifacts
          path: release/

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-artifacts
          path: release/

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-artifacts
          path: release/

      - name: List all artifacts
        run: ls -lh release/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.get-version.outputs.version }}
          name: üçÖ Pomodoro Focus ${{ needs.get-version.outputs.version }}
          body: |
            ## üçÖ Pomodoro Focus ${{ needs.get-version.outputs.version }}
            
            ### üéâ Release Highlights
            
            Um timer Pomodoro moderno e eficiente para Windows, Linux e macOS, constru√≠do com Electron, React e TypeScript.
            
            #### ‚ú® Features
            
            - ‚è±Ô∏è Timer Pomodoro completo com sess√µes de foco e pausas
            - üé® Temas modernos (Light/Dark/System)
            - ü™ü Interface limpa com janela frameless
            - üìä Estat√≠sticas de produtividade
            - üîî Notifica√ß√µes nativas
            - üîä Sistema de sons
            - üìç System tray com minimize to tray
            - üíæ Persist√™ncia de configura√ß√µes e estado
            
            #### üì• Downloads
            
            **Windows:**
            - `Pomodoro Focus Setup ${{ needs.get-version.outputs.version_number }}.exe` - Instalador NSIS (recomendado)
            - `PomodoroFocus-Portable-${{ needs.get-version.outputs.version_number }}.exe` - Vers√£o port√°til
            
            **Linux:**
            - `Pomodoro Focus-${{ needs.get-version.outputs.version_number }}.AppImage` - Universal (recomendado)
            - `pomodoro-focus_${{ needs.get-version.outputs.version_number }}_amd64.deb` - Debian/Ubuntu
            
            **macOS:**
            - `Pomodoro Focus-${{ needs.get-version.outputs.version_number }}.dmg` - Instalador DMG
            - `Pomodoro Focus-${{ needs.get-version.outputs.version_number }}-mac.zip` - Arquivo ZIP
            
            #### üöÄ Como Usar
            
            1. Baixe o execut√°vel apropriado para seu sistema operacional
            2. Instale ou execute o aplicativo
            3. Configure suas prefer√™ncias na aba "Configura√ß√µes"
            4. Comece a usar a t√©cnica Pomodoro!
            
            #### üìù Notas
            
            - **Windows**: Na primeira execu√ß√£o, o Windows Defender pode mostrar um aviso. Clique em "Mais informa√ß√µes" ‚Üí "Executar mesmo assim"
            - **macOS**: Pode ser necess√°rio ir em "Prefer√™ncias do Sistema" ‚Üí "Seguran√ßa e Privacidade" para permitir a execu√ß√£o
            - **Linux**: Para AppImage, torne execut√°vel com `chmod +x` antes de executar
            
            ---
            
            **Desenvolvido com ‚ù§Ô∏è usando a T√©cnica Pomodoro**
          draft: false
          prerelease: false
          files: |
            release/*
          token: ${{ secrets.GITHUB_TOKEN }}
